apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: peronaworkloads.kopf.dev
spec:
  scope: Namespaced
  group: kopf.dev
  names:
    kind: PeronaWorkload
    plural: peronaworkloads
    singular: peronaworkload
    shortNames:
      - pws
      - pw
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            automate:
              type: boolean
              default: true
            sparkSpec:
              type: object
              x-kubernetes-embedded-resource: true
              x-kubernetes-preserve-unknown-fields: true
            flinkSpec:
              type: object
              x-kubernetes-embedded-resource: true
              x-kubernetes-preserve-unknown-fields: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: perona-account
---
kind: Namespace
apiVersion: v1
metadata:
  name: kubestone
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: perona-role-cluster
rules:
  - apiGroups: [kopf.dev]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]
  - apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]
  - apiGroups: [""]
    resources: [events]
    verbs: [create]
  # perona operator and corresponding CRDs
  - apiGroups: [kopf.dev]
    resources: [peronas, peronaworkloads]
    verbs: ["*"]
  # kubestone
  - apiGroups: [perf.kubestone.xridge.io]
    resources: ["*"]
    verbs: ["*"]
  # allow access to nodes
  - apiGroups: [""]
    resources: [nodes]
    verbs: [list, watch, get]
  # configure rights for resources belonging to spark-operator
  - apiGroups: [sparkoperator.k8s.io]
    resources: ["*"]
    verbs: ["*"]
  # configure rights for resources belonging to flink-operator
  - apiGroups: [flink.apache.org]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: perona-role-namespaced
rules:
  - apiGroups: [kopf.dev]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]
  # perona operator and corresponding CRDs
  - apiGroups: [kopf.dev]
    resources: [peronas, peronaworkloads]
    verbs: ["*"]
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
  - apiGroups: [""]
    resources: [pods, persistentvolumeclaims]
    verbs: [create]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kubestone
  name: kubestone-role-namespaced
rules:
  # kubestone
  - apiGroups: [perf.kubestone.xridge.io]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: perona-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: perona-role-cluster
subjects:
  - kind: ServiceAccount
    name: perona-account
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: default
  name: perona-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: perona-role-namespaced
subjects:
  - kind: ServiceAccount
    name: perona-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: kubestone
  name: kubestone-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubestone-role-namespaced
subjects:
  - kind: ServiceAccount
    name: perona-account
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: perona-service
spec:
  type: NodePort
  ports:
  - name: perona-api
    nodePort: 31313
    port: 8000
    targetPort: perona-api
  selector:
    app: perona-operator
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: perona-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/perona-data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: perona-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: perona-operator
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: perona-operator
  template:
    metadata:
      labels:
        app: perona-operator
    spec:
      serviceAccountName: perona-account
      containers:
      - name: perona-operator
        image: perona-operator:dev
        env:
        - name: PROMETHEUS_ENDPOINT
          value: http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090
        ports:
        - containerPort: 8000
          name: perona-api
        volumeMounts:
        - name: perona-pv-storage
          mountPath: /tmp
      volumes:
        - name: perona-pv-storage
          persistentVolumeClaim:
            claimName: perona-pv-claim
